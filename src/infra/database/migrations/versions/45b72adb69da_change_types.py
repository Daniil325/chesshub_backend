"""change_types

Revision ID: 45b72adb69da
Revises: a49f6fc4caac
Create Date: 2025-05-01 17:15:14.969429

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '45b72adb69da'
down_revision: Union[str, None] = 'a49f6fc4caac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('test', 'min_score',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('test', 'time_limit',
               existing_type=sa.UUID(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.drop_constraint('test_time_limit_fkey', 'test', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('test_time_limit_fkey', 'test', 'course', ['time_limit'], ['id'])
    op.alter_column('test', 'time_limit',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.alter_column('test', 'min_score',
               existing_type=sa.Integer(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    # ### end Alembic commands ###
